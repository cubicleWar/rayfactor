/////////////////////////////////////////////////////////////////////////////////////////////////////////
//	Object : Ray
//
//	Description : Ray represents a virtual ray which travels through the user specified 'scene'
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////


#ifndef __RAYX4_H__
#define __RAYX4_H__

#include "Vectorx4.h"

using namespace std;

class Rayx4
{   
    public:
		Vectorx4 s;				// The orgin of the ray
        Vectorx4 c;				// The direction the ray is traveling
		
        Rayx4();
        void setStart(const __m128& x, const __m128& _y, const __m128& _z);
        void setDir(const __m128& x, const __m128& y, const __m128& z);
        void setDir(const Vectorx4 dir);
};


/////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Ray::Ray
//
//	Comments : Default constructor, sets the origin of the ray to the cartesian origin
//
//	Date		Developer		Action
/////////////////////////////////////////////////////////////////////////////////////////////////////////
//	01/02/06	Trevor Walker	Created
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////
inline Rayx4::Rayx4()
{
    s = Vectorx4();
	c = Vectorx4();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Ray::setStart
//
//	Comments : Sets the start point (origin) of the ray given cartesian co-ordinates
//
//	Arguments:	sX is the x component of the start point
//				sY is the y component of the start point
//				sZ is the z component of the start point
//
//	Date		Developer		Action
/////////////////////////////////////////////////////////////////////////////////////////////////////////
//	01/02/06	Trevor Walker	Created
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////
inline void Rayx4::setStart(const __m128& x, const __m128& y, const __m128& z)
{
    s.set(x, y, z);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Ray::setDir
//
//	Comments : Sets the direction of the ray
//
//	Arguments:	dir is a vector containing the direction for this vector
//
//	Date		Developer		Action
/////////////////////////////////////////////////////////////////////////////////////////////////////////
//	01/02/06	Trevor Walker	Created
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////
inline void Rayx4::setDir(const __m128& x, const __m128& y, const __m128& z)
{
    c.set(x, y, z);
}

inline void Rayx4::setDir(const Vectorx4 dir) {
    c = dir;
}


#endif
